(in-package :letcn)

(defun invert-matrix (m)
  (declare (type (array float (3 3)) m))
  (let ((m00 (aref m 0 0)) (m01 (aref m 0 1)) (m02 (aref m 0 2))
        (m10 (aref m 1 0)) (m11 (aref m 1 1)) (m12 (aref m 1 2))
        (m20 (aref m 2 0)) (m21 (aref m 2 1)) (m22 (aref m 2 2)))
    (let ((det3 (- (+ (* m00 m11 m22) (* m10 m21 m02) (* m20 m01 m12))
                   (* m00 m21 m12) (* m10 m01 m22) (* m20 m11 m02))))
      (unless (zerop det3)
        (flet ((det2/det3 (a b c d) (/ (- (* a d) (* b c)) det3)))
          (make-matrix (list (list (det2/det3 m11 m12 m21 m22)
                                   (det2/det3 m02 m01 m22 m21)
                                   (det2/det3 m01 m02 m11 m12))
                             (list (det2/det3 m12 m10 m22 m20)
                                   (det2/det3 m00 m02 m20 m22)
                                   (det2/det3 m02 m00 m12 m10))
                             (list (det2/det3 m10 m11 m20 m21)
                                   (det2/det3 m01 m00 m21 m20)
                                   (det2/det3 m00 m01 m10 m11)))))))))
